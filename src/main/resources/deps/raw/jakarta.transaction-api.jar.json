{
  "name": "jakarta.transaction-api.jar",
  "classes": [
    {
      "name": "javax.transaction.HeuristicCommitException",
      "references": [
        "java.lang.Exception",
        "java.lang.String"
      ]
    },
    {
      "name": "javax.transaction.HeuristicMixedException",
      "references": [
        "java.lang.Exception",
        "java.lang.String"
      ]
    },
    {
      "name": "javax.transaction.HeuristicRollbackException",
      "references": [
        "java.lang.Exception",
        "java.lang.String"
      ]
    },
    {
      "name": "javax.transaction.InvalidTransactionException",
      "references": [
        "java.lang.String",
        "java.rmi.RemoteException"
      ]
    },
    {
      "name": "javax.transaction.NotSupportedException",
      "references": [
        "java.lang.Exception",
        "java.lang.String"
      ]
    },
    {
      "name": "javax.transaction.RollbackException",
      "references": [
        "java.lang.Exception",
        "java.lang.String"
      ]
    },
    {
      "name": "javax.transaction.Status",
      "references": [
        "java.lang.Object"
      ]
    },
    {
      "name": "javax.transaction.Synchronization",
      "references": [
        "java.lang.Object"
      ]
    },
    {
      "name": "javax.transaction.SystemException",
      "references": [
        "java.lang.Exception",
        "java.lang.String"
      ]
    },
    {
      "name": "javax.transaction.Transaction",
      "references": [
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.Object",
        "java.lang.SecurityException",
        "javax.transaction.HeuristicMixedException",
        "javax.transaction.HeuristicRollbackException",
        "javax.transaction.RollbackException",
        "javax.transaction.RollbackException",
        "javax.transaction.RollbackException",
        "javax.transaction.Synchronization",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.xa.XAResource",
        "javax.transaction.xa.XAResource"
      ]
    },
    {
      "name": "javax.transaction.TransactionManager",
      "references": [
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.Object",
        "java.lang.SecurityException",
        "java.lang.SecurityException",
        "javax.transaction.HeuristicMixedException",
        "javax.transaction.HeuristicRollbackException",
        "javax.transaction.InvalidTransactionException",
        "javax.transaction.NotSupportedException",
        "javax.transaction.RollbackException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.Transaction",
        "javax.transaction.Transaction",
        "javax.transaction.Transaction"
      ]
    },
    {
      "name": "javax.transaction.TransactionRequiredException",
      "references": [
        "java.lang.String",
        "java.rmi.RemoteException"
      ]
    },
    {
      "name": "javax.transaction.TransactionRolledbackException",
      "references": [
        "java.lang.String",
        "java.rmi.RemoteException"
      ]
    },
    {
      "name": "javax.transaction.TransactionScoped",
      "references": [
        "java.lang.Object",
        "java.lang.annotation.Annotation",
        "java.lang.annotation.ElementType",
        "java.lang.annotation.ElementType",
        "java.lang.annotation.ElementType",
        "java.lang.annotation.Retention",
        "java.lang.annotation.RetentionPolicy",
        "java.lang.annotation.Target",
        "javax.enterprise.context.NormalScope"
      ]
    },
    {
      "name": "javax.transaction.TransactionSynchronizationRegistry",
      "references": [
        "java.lang.Object",
        "java.lang.Object",
        "java.lang.Object",
        "java.lang.Object",
        "java.lang.Object",
        "java.lang.Object",
        "javax.transaction.Synchronization"
      ]
    },
    {
      "name": "javax.transaction.Transactional",
      "references": [
        "java.lang.Class",
        "java.lang.Class",
        "java.lang.Object",
        "java.lang.annotation.Annotation",
        "java.lang.annotation.ElementType",
        "java.lang.annotation.ElementType",
        "java.lang.annotation.Inherited",
        "java.lang.annotation.Retention",
        "java.lang.annotation.RetentionPolicy",
        "java.lang.annotation.Target",
        "javax.enterprise.util.Nonbinding",
        "javax.enterprise.util.Nonbinding",
        "javax.interceptor.InterceptorBinding",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType"
      ]
    },
    {
      "name": "javax.transaction.Transactional$TxType",
      "references": [
        "java.lang.Enum",
        "java.lang.String",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType",
        "javax.transaction.Transactional$TxType"
      ]
    },
    {
      "name": "javax.transaction.TransactionalException",
      "references": [
        "java.lang.RuntimeException",
        "java.lang.String",
        "java.lang.Throwable"
      ]
    },
    {
      "name": "javax.transaction.UserTransaction",
      "references": [
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.IllegalStateException",
        "java.lang.Object",
        "java.lang.SecurityException",
        "java.lang.SecurityException",
        "javax.transaction.HeuristicMixedException",
        "javax.transaction.HeuristicRollbackException",
        "javax.transaction.NotSupportedException",
        "javax.transaction.RollbackException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException",
        "javax.transaction.SystemException"
      ]
    }
  ]
}